/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion.Licencias;

import Dominio.Feriado;
import Dominio.Horario;
import Dominio.LicenciaAdelantada;
import Dominio.MovimientoLicencia;
import Logica.LogFuncionario;
import Presentacion.frmPrin;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pattun
 */
public class InternalAdelantado extends javax.swing.JInternalFrame {

  private LogFuncionario log;
   
    private MovimientoLicencia lic;
    private Integer real=0;
    private ArrayList<Feriado> listaFeriados;
     private static InternalAdelantado instancia=null;
    public InternalAdelantado() throws ClassNotFoundException, SQLException {
        initComponents();
        this.txtAño.setEditable(false);
        this.txtSaldo.setEditable(false);
        this.btnAceptar.setEnabled(false);
        this.txtFechaFIn.setEnabled(false);
        this.txtFechaIni.setEnabled(false);
        this.btnCalc.setEnabled(false);
        this.txtdias.setEnabled(false);
        this.log=new LogFuncionario();
        this.jPanel1.setVisible(true);
        this.setTitle("Licencia Adelantada");
        this.listaFeriados=this.log.listarTodosFeriados();
    }
    
        public static InternalAdelantado instancia() throws ClassNotFoundException, SQLException
   {    
         if (instancia== null)
         {
            instancia = new InternalAdelantado();
         }
         return instancia;
      
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodFunc = new org.edisoncor.gui.textField.TextFieldRound();
        btnBuscar = new org.edisoncor.gui.button.ButtonIcon();
        jLabel3 = new javax.swing.JLabel();
        txtSaldo = new org.edisoncor.gui.textField.TextFieldRound();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtdias = new org.edisoncor.gui.textField.TextFieldRound();
        txtFechaIni = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFechaFIn = new com.toedter.calendar.JDateChooser();
        btnAceptar = new org.edisoncor.gui.button.ButtonIcon();
        lblNombres = new javax.swing.JLabel();
        txtAño = new org.edisoncor.gui.textField.TextFieldRound();
        lblMsg = new javax.swing.JLabel();
        lblReal = new javax.swing.JLabel();
        btnCalc = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Licencia Adelantada", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ebrima", 1, 18))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel2.setText("Cod.Funcionario");

        txtCodFunc.setBackground(new java.awt.Color(102, 153, 255));
        txtCodFunc.setForeground(new java.awt.Color(255, 255, 255));
        txtCodFunc.setCaretColor(new java.awt.Color(255, 255, 255));
        txtCodFunc.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtCodFunc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodFuncKeyTyped(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(102, 153, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btnBuscar.setText("buttonIcon1");
        btnBuscar.setToolTipText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel3.setText("Adelanto de:");

        txtSaldo.setBackground(new java.awt.Color(102, 153, 255));
        txtSaldo.setForeground(new java.awt.Color(255, 255, 255));
        txtSaldo.setCaretColor(new java.awt.Color(255, 255, 255));
        txtSaldo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtSaldo.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtSaldo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaldoKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel4.setText("Saldo");

        jLabel5.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel5.setText("Dias a tomar");

        txtdias.setBackground(new java.awt.Color(102, 153, 255));
        txtdias.setForeground(new java.awt.Color(255, 255, 255));
        txtdias.setCaretColor(new java.awt.Color(255, 255, 255));
        txtdias.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtdias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdiasFocusLost(evt);
            }
        });
        txtdias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdiasKeyTyped(evt);
            }
        });

        txtFechaIni.setDateFormatString("dd/MM/yyyy");
        txtFechaIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaIniFocusLost(evt);
            }
        });
        txtFechaIni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaIniKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel6.setText("Fecha Inicio");

        jLabel7.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel7.setText("Fecha Fin");

        txtFechaFIn.setDateFormatString("dd/MM/yyyy");
        txtFechaFIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaFInFocusLost(evt);
            }
        });
        txtFechaFIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaFInKeyTyped(evt);
            }
        });

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ok.png"))); // NOI18N
        btnAceptar.setText("buttonIcon1");
        btnAceptar.setToolTipText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        lblNombres.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombres.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtAño.setBackground(new java.awt.Color(102, 153, 255));
        txtAño.setForeground(new java.awt.Color(255, 255, 255));
        txtAño.setCaretColor(new java.awt.Color(255, 255, 255));
        txtAño.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtAño.setSelectionColor(new java.awt.Color(255, 255, 255));

        lblMsg.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        lblMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblReal.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        lblReal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnCalc.setBackground(new java.awt.Color(102, 153, 255));
        btnCalc.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        btnCalc.setText("Calcular");
        btnCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(25, 25, 25)
                        .addComponent(txtCodFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(lblNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(txtFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(btnCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel7)
                        .addGap(69, 69, 69)
                        .addComponent(txtFechaFIn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblReal, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(45, 45, 45)
                                .addComponent(txtdias, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(103, 103, 103)
                                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(48, 48, 48)
                                    .addComponent(txtAño, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(3, 3, 3))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(txtCodFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(lblNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3))
                    .addComponent(txtAño, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5))
                    .addComponent(txtdias, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel6))
                    .addComponent(txtFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCalc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel7))
                    .addComponent(txtFechaFIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(lblReal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 401, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 514, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodFuncKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodFuncKeyTyped
        this.btnAceptar.setEnabled(false);
        this.txtFechaFIn.setEnabled(false);
        this.txtFechaIni.setEnabled(false);
        this.btnCalc.setEnabled(false);
        this.txtdias.setEnabled(false);
        this.limpiar();
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)) {
            evt.consume();
        }
        if(evt.getKeyChar()==10){
            this.btnBuscar.doClick();
            //this.txtFechaIni.requestFocus();
        }
        this.txtCodFunc.requestFocus();
    }//GEN-LAST:event_txtCodFuncKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.limpiar();

        String codFunc=this.txtCodFunc.getText();
        if(!codFunc.equals("")){
            
            try {
                lic= log.consultaAdelantado(codFunc);
            } catch (SQLException ex) {
                Logger.getLogger(InternalAdelantado.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InternalAdelantado.class.getName()).log(Level.SEVERE, null, ex);
            }
                if(lic!=null){
                    if(lic.getFuncionario()!=null){
                        this.lblNombres.setText(lic.getFuncionario().getNomCompleto());
                        Integer año=lic.getAñoSaldo()-1;
                        this.txtAño.setText(año.toString());
                        Integer saldo=10-lic.getDiasTomados();
                        this.txtSaldo.setText(saldo.toString());
                        this.txtdias.setEnabled(true);
                        this.txtdias.requestFocus();
                        this.btnAceptar.setEnabled(true);
                        this.txtFechaFIn.setEnabled(true);
                        this.txtFechaIni.setEnabled(true);
                        this.btnCalc.setEnabled(true);
                        this.txtdias.requestFocus();
                    }
                    else{
                        this.lblMsg.setText("Ingrese las fechas para la licencia de este Funcionario");
                        this.btnAceptar.setEnabled(false);
                        this.txtFechaFIn.setEnabled(false);
                        this.txtFechaIni.setEnabled(false);
                        this.btnCalc.setEnabled(false);
                        this.txtdias.setEnabled(false);
                    }
                }
                else{
                    this.lblMsg.setText("El funcionario que busca no existe");
                    this.btnAceptar.setEnabled(false);
                    this.txtFechaFIn.setEnabled(false);
                    this.txtFechaIni.setEnabled(false);
                    this.btnCalc.setEnabled(false);
                    this.txtdias.setEnabled(false);
                }
            
        }
        else{
            this.lblMsg.setText("Ingrese un número de Funcionario");
            this.btnAceptar.setEnabled(false);
            this.txtFechaFIn.setEnabled(false);
            this.txtFechaIni.setEnabled(false);
            this.btnCalc.setEnabled(false);
            this.txtdias.setEnabled(false);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtSaldoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaldoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaldoKeyTyped

    private void txtdiasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdiasFocusLost
        // Integer saldo=Integer.valueOf(this.txtSaldo.getText());
        if(!this.txtdias.getText().equals("")){
            // Integer dias=Integer.valueOf(this.txtdias.getText());
            this.lblMsg.setText("");

        }
    }//GEN-LAST:event_txtdiasFocusLost

    private void txtdiasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdiasKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)) {
            evt.consume();
        }
        if(evt.getKeyChar()==10){
            this.txtFechaIni.requestFocus();
        }
    }//GEN-LAST:event_txtdiasKeyTyped

    private void txtFechaIniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaIniFocusLost
        this.txtdias.setText(real.toString());
    }//GEN-LAST:event_txtFechaIniFocusLost

    private void txtFechaIniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaIniKeyTyped
        if(evt.getKeyChar()==10){
            this.txtFechaFIn.requestFocus();
        }
    }//GEN-LAST:event_txtFechaIniKeyTyped

    private void txtFechaFInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaFInFocusLost
        this.txtdias.setText(real.toString());
    }//GEN-LAST:event_txtFechaFInFocusLost

    private void txtFechaFInKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaFInKeyTyped
        if(evt.getKeyChar()==10){
            this.btnAceptar.doClick();
        }
    }//GEN-LAST:event_txtFechaFInKeyTyped

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Date ini=this.txtFechaIni.getDate();
        Date fin=this.txtFechaFIn.getDate();
        Integer año=Integer.valueOf(this.txtAño.getText())+1;
        //Integer saldo=Integer.valueOf(this.txtSaldo.getText());

        if(!this.txtdias.getText().equals("")){
            Integer diasTomar=Integer.valueOf(this.txtdias.getText());

            if(ini!=null && fin!=null){

                if(ini.after(fin)){
                    this.lblMsg.setText("La fecha de inicio no puede ser mayor a la de fin");
                }
                else{
                    this.lblMsg.setText("");
                    if(this.evaluaFechas(ini, fin, this.txtSaldo.getText(),this.lic.getFuncionario().getHorarios())){
                        Integer dom=this.obtieneDomingoySabado(ini, fin,this.lic.getFuncionario().getHorarios());
                        Integer fer=this.compararFechas(ini, fin).size();
                        this.lblReal.setText("Dias tomados en cuenta "+real.toString());
                        this.lblMsg.setText("Considere que en este rango hay "+dom+" días que no cuentan, y "+fer+" feriados");
                        if(diasTomar==real){
                            Integer codFunc=Integer.valueOf(this.txtCodFunc.getText());
                            try {
                                if(this.log.insertarLicAdelantada(año,ini,fin,real,lic.getFuncionario(),0)){
                                    this.limpiar();
                                    this.lblMsg.setText("Se ingresó correctamente");
                                    this.lblReal.setText("");
                                    this.txtCodFunc.setText("");
                                    this.btnAceptar.setEnabled(false);
                                    this.txtdias.setEnabled(false);
                                    this.txtFechaFIn.setEnabled(false);
                                    this.txtFechaIni.setEnabled(false);
                                    this.btnCalc.setEnabled(false);
                                    this.txtCodFunc.requestFocus();
                                }
                                else{
                                    this.lblMsg.setText("No se ha podido ingresar");
                                }
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(InternalAdelantado.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (SQLException ex) {
                                Logger.getLogger(InternalAdelantado.class.getName()).log(Level.SEVERE, null, ex);
                            } 
                        }
                        else{
                            this.lblMsg.setText("Verifique los días a tomar");
                        }
                    }
                    else{
                        Integer dom=this.obtieneDomingoySabado(ini, fin,this.lic.getFuncionario().getHorarios());
                        Integer fer=this.compararFechas(ini, fin).size();
                        this.lblReal.setText("Dias tomados en cuenta "+real.toString());
                        this.lblMsg.setText("Considere que en este rango hay "+dom+" días que no cuentan, y "+fer+" feriados");
                    }
                }

            }
            else{
                this.lblMsg.setText("Ingrese las fechas");
            }

        }
        else{
            this.lblMsg.setText("Ingrese la cantidad de días");
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcActionPerformed
        Date fechaIni=this.txtFechaIni.getDate();
        Integer gen=null;
        if(!"".equals(this.txtdias.getText())){
            gen=Integer.valueOf(this.txtdias.getText());
        }
        ArrayList<Horario> listaHor=this.lic.getFuncionario().getHorarios();
        if(fechaIni!=null){
            if(gen!=null){
                this.txtFechaFIn.setDate(this.log.obtieneFechaFin(fechaIni, gen, listaHor));
            }
            else{
                this.lblMsg.setText("Ingrese dias a tomar");
            }

        }
    }//GEN-LAST:event_btnCalcActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        instancia=null;
    }//GEN-LAST:event_formInternalFrameClosed

    private void limpiar(){
        this.txtdias.setText("");
        this.txtFechaFIn.setDate(null);
        this.txtFechaIni.setDate(null);
        this.lblMsg.setText("");
        this.txtSaldo.setText("");
        this.txtAño.setText("");
        this.lblNombres.setText("");
    }
    
      //PAQUETE MANEJA FECHAS, FERIADOS, SABADO Y DOMINGO//
    private ArrayList<Feriado> compararFechas(Date fechaIni, Date fechaFin) {
        Integer dias=0;
        ArrayList<Feriado> aux=new ArrayList<>();
        
        for(Feriado f:this.listaFeriados){
            if((fechaIni.equals(f.getFecha())||fechaIni.before(f.getFecha()))&& (fechaFin.equals(f.getFecha())||fechaFin.after(f.getFecha()))){
                aux.add(f);
            }
        }
        
        return aux;
    }
    
  private Integer obtieneDomingoySabado(Date fechaIni, Date fechaFin,ArrayList<Horario>horarios){
    Integer contador=0;
    Calendar c1 = Calendar.getInstance();
    c1.setTime(fechaIni);
    Calendar c2 = Calendar.getInstance();
    c2.setTime(fechaFin);
    ArrayList<Date> listaFechas = new ArrayList<Date>();
    boolean Domingo=this.diaEsta(horarios,"DOMINGO");
//    boolean Sabado=this.diaEsta(horarios,"SABADO");
    
    while (!c1.after(c2)) {
        listaFechas.add(c1.getTime());
        c1.add(Calendar.DAY_OF_MONTH, 1);
    }
    
    for (Iterator<Date> it = listaFechas.iterator(); it.hasNext();) {
          Date date = it.next();
          GregorianCalendar cal = new GregorianCalendar();
          cal.setTime(date);
          
          if(!Domingo){
            if(cal.get(Calendar.DAY_OF_WEEK)==1){
                  contador++;
            }	
          }
//          if(!Sabado){
//            if(cal.get(Calendar.DAY_OF_WEEK)==7){
//                  contador++;
//          }
//       }
       
    }
     return contador;
  }

    private boolean evaluaFechas(Date fechaIni, Date fechaFin, String gen,ArrayList<Horario>horarios) {
        int dias=(int) ((fechaFin.getTime()-fechaIni.getTime())/86400000);
        dias+=1;
 	Integer domingos=this.obtieneDomingoySabado(fechaIni, fechaFin,horarios);
        Integer feriados=this.compararFechas(fechaIni, fechaFin).size();
        boolean pasa=false;
        real=dias-domingos-feriados;
        Integer generado=Integer.valueOf(gen);
        if(real<=generado){
            pasa=true;
        }
        return pasa;
    }

    private boolean diaEsta(ArrayList<Horario> horarios, String dia) {
        boolean esta=false;
        int i=0;
        while(i<horarios.size()&&!esta){
            if(horarios.get(i).getDescripcion().equals(dia)){
                esta=true;
            }
            i++;
        }
        return esta;
    }    
    
    //-------------//----------------//

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIcon btnAceptar;
    private org.edisoncor.gui.button.ButtonIcon btnBuscar;
    private javax.swing.JButton btnCalc;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JLabel lblReal;
    private org.edisoncor.gui.textField.TextFieldRound txtAño;
    private org.edisoncor.gui.textField.TextFieldRound txtCodFunc;
    private com.toedter.calendar.JDateChooser txtFechaFIn;
    private com.toedter.calendar.JDateChooser txtFechaIni;
    private org.edisoncor.gui.textField.TextFieldRound txtSaldo;
    private org.edisoncor.gui.textField.TextFieldRound txtdias;
    // End of variables declaration//GEN-END:variables
}
