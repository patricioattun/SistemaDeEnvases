
package Presentacion.Licencias;

import Dominio.Feriado;
import Dominio.Funcionario;
import Dominio.Horario;
import Dominio.Licencia;
import Logica.LogFuncionario;
import Presentacion.frmPrin;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;


public class InternalCalcular extends javax.swing.JInternalFrame {

    private LogFuncionario log;
    private ArrayList<Feriado> listaFeriados;
    private Licencia lic;
    private ArrayList<Licencia> listaLicencia;
    private Integer real=0;
    private static InternalCalcular instancia=null;
    
    public InternalCalcular() throws ClassNotFoundException, SQLException {
        initComponents();
        this.btnAceptar.setEnabled(false);
        this.txtGen.setEditable(false);
        this.txtFechaFin.setEnabled(false);
        this.txtFechaIni.setEnabled(false);
        this.jButton1.setEnabled(false);
        log=new LogFuncionario();
        this.jPanel1.setVisible(true);
        this.listaFeriados=this.log.listarTodosFeriados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCodFunc = new org.edisoncor.gui.textField.TextFieldRound();
        jLabel2 = new javax.swing.JLabel();
        btnBuscar = new org.edisoncor.gui.button.ButtonIcon();
        lblNombres = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtGen = new org.edisoncor.gui.textField.TextFieldRound();
        btnAceptar = new org.edisoncor.gui.button.ButtonIcon();
        lblMsg = new javax.swing.JLabel();
        lblReal = new javax.swing.JLabel();
        comboAño = new javax.swing.JComboBox();
        txtFechaIni = new com.toedter.calendar.JDateChooser();
        txtFechaFin = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        txtDesc = new org.edisoncor.gui.textField.TextFieldRound();
        jLabel7 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(442, 545));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ingresar Licencia", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ebrima", 1, 18))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(430, 535));

        txtCodFunc.setBackground(new java.awt.Color(102, 153, 255));
        txtCodFunc.setForeground(new java.awt.Color(255, 255, 255));
        txtCodFunc.setCaretColor(new java.awt.Color(255, 255, 255));
        txtCodFunc.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtCodFunc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodFuncKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel2.setText("Cod.Funcionario");

        btnBuscar.setBackground(new java.awt.Color(102, 153, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btnBuscar.setText("buttonIcon1");
        btnBuscar.setToolTipText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblNombres.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombres.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel3.setText("Licencia Generada en");

        jLabel4.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel4.setText("Fecha Inicio");

        jLabel5.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel5.setText("Fecha Fin");

        jLabel6.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel6.setText("Días Generados");

        txtGen.setBackground(new java.awt.Color(102, 153, 255));
        txtGen.setForeground(new java.awt.Color(255, 255, 255));
        txtGen.setCaretColor(new java.awt.Color(255, 255, 255));
        txtGen.setSelectionColor(new java.awt.Color(255, 255, 255));

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ok.png"))); // NOI18N
        btnAceptar.setText("buttonIcon1");
        btnAceptar.setToolTipText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        lblMsg.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        lblMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblReal.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        lblReal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        comboAño.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboAñoItemStateChanged(evt);
            }
        });

        txtFechaIni.setToolTipText("");
        txtFechaIni.setDateFormatString("dd/MM/yyyy");

        txtFechaFin.setToolTipText("");
        txtFechaFin.setDateFormatString("dd/MM/yyyy");

        jButton1.setBackground(new java.awt.Color(102, 153, 255));
        jButton1.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtDesc.setBackground(new java.awt.Color(102, 153, 255));
        txtDesc.setForeground(new java.awt.Color(255, 255, 255));
        txtDesc.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDesc.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtDesc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescFocusLost(evt);
            }
        });
        txtDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel7.setText("Días de Descuento");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtCodFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addComponent(comboAño, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addGap(85, 85, 85)
                        .addComponent(txtFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel5)
                        .addGap(102, 102, 102)
                        .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel7)
                        .addGap(32, 32, 32)
                        .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel6)
                        .addGap(56, 56, 56)
                        .addComponent(txtGen, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblReal, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(txtCodFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(lblNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3))
                    .addComponent(comboAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel4))
                    .addComponent(txtFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jButton1)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel5))
                    .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel7))
                    .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel6))
                    .addComponent(txtGen, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblReal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 430, 535);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodFuncKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodFuncKeyTyped
        this.limpiar();
        this.comboAño.removeAllItems();
        this.txtFechaFin.setEnabled(false);
        this.txtFechaIni.setEnabled(false);
        this.btnAceptar.setEnabled(false);
        this.jButton1.setEnabled(false);
        this.lblMsg.setText("");
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)) {
            evt.consume();
        }
        if(evt.getKeyChar()==10){
            this.btnBuscar.doClick();
            this.txtFechaIni.requestFocus();
        }
        this.txtCodFunc.requestFocus();
    }//GEN-LAST:event_txtCodFuncKeyTyped

     public static InternalCalcular instancia() throws ClassNotFoundException, SQLException
   {    
         if (instancia== null)
         {
            instancia = new InternalCalcular();
         }
         return instancia;
      
   }
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.limpiar();

        String codFunc=this.txtCodFunc.getText();
        try {
            if(!"".equals(codFunc)){
                listaLicencia=log.licenciaPorCod(codFunc);
                this.cargaCombo(listaLicencia);
                lic=(Licencia) this.comboAño.getSelectedItem();
                if(lic!=null){
                    this.lblNombres.setText(lic.getFuncionario().getNomCompleto());
                    this.txtFechaFin.setDate(lic.getFechaFin());
                    this.txtFechaIni.setDate(lic.getFechaIni());
                    this.txtGen.setText(lic.getDiasGenerados().toString());
                    this.txtDesc.setText(lic.getDiasDescuento().toString());
                    this.txtGen.setEditable(false);
                    this.btnAceptar.setEnabled(true);
                    this.jButton1.setEnabled(true);
                    this.txtFechaFin.setEnabled(true);
                    this.txtFechaIni.setEnabled(true);
                }
                else{
                    Funcionario f=log.funcParcial(codFunc);
                    if(f!=null&&f.getFechaEgreso()==null){
                        this.limpiar();
                        this.lblNombres.setText(f.getNomCompleto());
                        this.lblMsg.setText("Este funcionario no tiene los días calculados ");
                        this.btnAceptar.setEnabled(false);
                    }
                    else{
                        this.limpiar();
                        this.lblMsg.setText("Este funcionario no existe ");
                    }
                }
            }
            else{
                this.limpiar();
                this.lblMsg.setText("Ingrese número de funcionario");
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InternalCalcular.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(InternalCalcular.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Date fechaIni=this.txtFechaIni.getDate();
        Date fechaFin=this.txtFechaFin.getDate();
        
        Integer desc=0;
        if(!"".equals(this.txtDesc.getText())){
            desc=Integer.valueOf(this.txtDesc.getText());
        }
        lic.setSaldo(lic.getSaldo()+lic.getDiasDescuento());
        lic.setDiasDescuento(desc);
        lic=(Licencia) this.comboAño.getSelectedItem();
        String codFunc=this.txtCodFunc.getText();
        if(fechaIni!=null&&fechaFin!=null){

            if(this.evaluaFechas(fechaIni, fechaFin, this.txtGen.getText(),this.lic.getFuncionario().getHorarios(),desc)){

                try {
                    boolean updateLic=log.actualizarLic(fechaIni, fechaFin,lic);
                    if(updateLic){
                        listaLicencia=log.licenciaPorCod(codFunc);
                        this.cargaCombo(listaLicencia);
                        this.lblMsg.setText("Licencia Ingresada");
                        this.lblReal.setText("");
                        this.txtFechaFin.setDate(null);
                        this.txtFechaIni.setDate(null);
                        this.txtGen.setText("");
                        this.txtDesc.setText("");
                        this.btnAceptar.setEnabled(false);
                        this.txtGen.setEditable(false);
                        this.txtFechaFin.setEnabled(false);
                        this.txtFechaIni.setEnabled(false);
                        this.jButton1.setEnabled(false);
                        this.comboAño.removeAllItems();
                        this.txtCodFunc.setText("");

                    }
                } catch (ParseException ex) {
                    Logger.getLogger(InternalCalcular.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(InternalCalcular.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InternalCalcular.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                Integer dom=this.obtieneDomingoySabado(fechaIni, fechaFin,this.lic.getFuncionario().getHorarios());
                Integer fer=this.compararFechas(fechaIni, fechaFin).size();
                this.lblReal.setText("Dias tomados en cuenta "+real.toString());
                this.lblMsg.setText("Considere que en este rango hay "+dom+" días que no cuentan, y "+fer+" feriados");
            }
        }
        else{
            this.lblMsg.setText("Las fechas no pueden ser vacias");
        }

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void comboAñoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboAñoItemStateChanged
        this.limpiar();
        Licencia lic=(Licencia) this.comboAño.getSelectedItem();
        if(lic!=null){
            this.lblNombres.setText(lic.getFuncionario().getNomCompleto());
            this.txtFechaFin.setDate(lic.getFechaFin());
            this.txtFechaIni.setDate(lic.getFechaIni());
            this.txtGen.setText(lic.getDiasGenerados().toString());
            this.lblMsg.setText("");
            this.btnAceptar.setEnabled(true);
           
        }
    }//GEN-LAST:event_comboAñoItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Date fechaIni=this.txtFechaIni.getDate();
        Integer gen=Integer.valueOf(this.txtGen.getText());
        Integer desc=0;
        if(!"".equals(this.txtDesc.getText())){
            desc=Integer.valueOf(this.txtDesc.getText());
        }
        gen=gen-desc;
        ArrayList<Horario> listaHor=this.lic.getFuncionario().getHorarios();
        if(fechaIni!=null){
            this.txtFechaFin.setDate(this.log.obtieneFechaFin(fechaIni, gen, listaHor));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        instancia=null;
    }//GEN-LAST:event_formInternalFrameClosed

    private void txtDescKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)) {
            evt.consume();
        }
  
    }//GEN-LAST:event_txtDescKeyTyped

    private void txtDescFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescFocusLost
        if(this.txtFechaIni!=null){
            this.jButton1.doClick();
        }
    }//GEN-LAST:event_txtDescFocusLost

    
        private void limpiar(){
        this.txtFechaFin.setDate(null);
        this.txtFechaIni.setDate(null);
        this.txtGen.setText("");
        this.lblNombres.setText("");
        this.txtDesc.setText("");
    }
        
  private void cargaCombo(ArrayList<Licencia>lista){
         this.comboAño.removeAllItems();
        if(!lista.isEmpty()){
                for(int i=0;i<lista.size();i++){
                    this.comboAño.addItem(lista.get(i));
                    //this.comboAño.setSelectedIndex(1);
                }
        }    
     }
  
  private ArrayList<Feriado> compararFechas(Date fechaIni, Date fechaFin) {
        Integer dias=0;
        ArrayList<Feriado> aux=new ArrayList<>();
        
        for(Feriado f:this.listaFeriados){
            if((fechaIni.equals(f.getFecha())||fechaIni.before(f.getFecha()))&& (fechaFin.equals(f.getFecha())||fechaFin.after(f.getFecha()))){
                aux.add(f);
            }
        }
        
        return aux;
    }
    
    private Integer obtieneDomingoySabado(Date fechaIni, Date fechaFin,ArrayList<Horario>horarios){
    Integer contador=0;
    Calendar c1 = Calendar.getInstance();
    c1.setTime(fechaIni);
    Calendar c2 = Calendar.getInstance();
    c2.setTime(fechaFin);
    ArrayList<Date> listaFechas = new ArrayList<Date>();
    boolean Domingo=this.diaEsta(horarios,"DOMINGO");
    //boolean Sabado=this.diaEsta(horarios,"SABADO");
    
    while (!c1.after(c2)) {
        listaFechas.add(c1.getTime());
        c1.add(Calendar.DAY_OF_MONTH, 1);
    }
    
    for (Iterator<Date> it = listaFechas.iterator(); it.hasNext();) {
          Date date = it.next();
          GregorianCalendar cal = new GregorianCalendar();
          cal.setTime(date);
          
          if(!Domingo){
            if(cal.get(Calendar.DAY_OF_WEEK)==1){
                  contador++;
            }	
          }
//          if(!Sabado){
//            if(cal.get(Calendar.DAY_OF_WEEK)==7){
//                  contador++;
//          }
//       }
       
    }
     return contador;
  }

    private boolean evaluaFechas(Date fechaIni, Date fechaFin, String gen,ArrayList<Horario>horarios,Integer desc) {
        int dias=(int) ((fechaFin.getTime()-fechaIni.getTime())/86400000);
        dias+=1;
 	Integer domingos=this.obtieneDomingoySabado(fechaIni, fechaFin,horarios);
        Integer feriados=this.compararFechas(fechaIni, fechaFin).size();
        boolean pasa=false;
        real=dias-domingos-feriados;
        Integer generado=Integer.valueOf(gen)-desc;
        if(real==generado){
            pasa=true;
        }
        return pasa;
    }

    private boolean diaEsta(ArrayList<Horario> horarios, String dia) {
        boolean esta=false;
        int i=0;
        while(i<horarios.size()&&!esta){
            if(horarios.get(i).getDescripcion().equals(dia)){
                esta=true;
            }
            i++;
        }
        return esta;
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIcon btnAceptar;
    private org.edisoncor.gui.button.ButtonIcon btnBuscar;
    private javax.swing.JComboBox comboAño;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JLabel lblReal;
    private org.edisoncor.gui.textField.TextFieldRound txtCodFunc;
    private org.edisoncor.gui.textField.TextFieldRound txtDesc;
    private com.toedter.calendar.JDateChooser txtFechaFin;
    private com.toedter.calendar.JDateChooser txtFechaIni;
    private org.edisoncor.gui.textField.TextFieldRound txtGen;
    // End of variables declaration//GEN-END:variables
}
