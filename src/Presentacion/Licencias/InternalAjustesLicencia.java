
package Presentacion.Licencias;

import Dominio.Feriado;
import Dominio.Funcionario;
import Dominio.Horario;
import Dominio.Licencia;
import Dominio.LicenciaAdelantada;
import Dominio.Marca;
import Dominio.MovimientoLicencia;
import Logica.LogFuncionario;
import Logica.LogTripaliare;
import Persistencia.BDExcepcion;
import Presentacion.Marcas.InternalMarcas;
import Presentacion.frmPrin;
import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.edisoncor.gui.button.ButtonIcon;
import org.edisoncor.gui.textField.TextFieldRound;


public class InternalAjustesLicencia extends javax.swing.JInternalFrame {

   private LogFuncionario log;
   private LogTripaliare trip;
   private InternalMarcas internalMarcas;
   private Funcionario f;
   private frmPrin frm;
   private Licencia l;
   private MovimientoLicencia mov=null;
   private ArrayList<MovimientoLicencia> listaAdel;
   private ArrayList<MovimientoLicencia> listaMov;
   private MovimientoLicencia lic;
   private ArrayList<Licencia>lista;
   private Integer real=0;
   private ArrayList<Feriado> listaFeriados;
   public Date fechaAjuste=null;
   private Marca marca;
   DefaultTableModel tm=null;

    public JDateChooser getTxtFechaAjuste() {
        return txtFechaAjuste;
    }

    public Date getFechaAjuste() {
        return fechaAjuste;
    }

    public Marca getMarca() {
        return marca;
    }

    public void setMarca(Marca marca) {
        this.marca = marca;
    }

    public void setFechaAjuste(Date fechaAjuste) {
        this.fechaAjuste = fechaAjuste;
    }

    public void setTxtFechaAjuste(JDateChooser txtFechaAjuste) {
        this.txtFechaAjuste = txtFechaAjuste;
    }

    public ButtonIcon getBtnBuscar() {
        return btnBuscar;
    }

    public void setBtnBuscar(ButtonIcon btnBuscar) {
        this.btnBuscar = btnBuscar;
    }

    public TextFieldRound getTxtCodFunc() {
        return txtCodFunc;
    }

    public void setTxtCodFunc(TextFieldRound txtCodFunc) {
        this.txtCodFunc = txtCodFunc;
    }
    
  private static InternalAjustesLicencia instancia=null;
    private InternalAjustesLicencia(LogFuncionario logf,LogTripaliare logt) throws ClassNotFoundException, SQLException {
        initComponents();
        if(logf!=null&&logt!=null){
            log=logf;
            trip=logt;
        }
        else{
         log=new LogFuncionario();
         trip=new LogTripaliare();
        }
         this.frm=frm;
         //this.setVisible(true);
         this.listaFeriados=this.log.listarTodosFeriados();
         this.comboAño.setEnabled(false);
         this.radioActual.setEnabled(false);
         this.radioAnterior.setEnabled(false);
         this.radioSiguiente.setEnabled(false);
         this.txtDias.setEnabled(false);
         this.txtSaldo.setEditable(false);
         this.txtDias.setEnabled(false);
         this.txtFechaAjuste.setEnabled(false);
         this.jButton1.setEnabled(false);
         this.jPanel1.setVisible(true);
         this.marca=null;
         this.setIconifiable(true);
         
         ((JTextFieldDateEditor)this.txtFechaUlt.getDateEditor()).setEditable(false);
         this.txtFechaUlt.getCalendarButton().setEnabled(false);
         tm = (DefaultTableModel) tablaMov.getModel();
         tablaMov.addMouseListener(new java.awt.event.MouseAdapter() {
             public void mouseClicked(java.awt.event.MouseEvent e) {
                if(e.getClickCount()==2){
                    cargarMovimiento(e);
                 }
         }});
    }

  
    
  public static InternalAjustesLicencia instancia(LogFuncionario logf,LogTripaliare logt) throws ClassNotFoundException, SQLException
   {    
         if (instancia== null)
         {
            instancia = new InternalAjustesLicencia(logf,logt);
         }
         return instancia;
      
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodFunc = new org.edisoncor.gui.textField.TextFieldRound();
        lblNombres = new javax.swing.JLabel();
        btnBuscar = new org.edisoncor.gui.button.ButtonIcon();
        radioAnterior = new javax.swing.JRadioButton();
        radioActual = new javax.swing.JRadioButton();
        radioSiguiente = new javax.swing.JRadioButton();
        comboAño = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtDias = new org.edisoncor.gui.textField.TextFieldRound();
        jLabel4 = new javax.swing.JLabel();
        btnAceptar = new org.edisoncor.gui.button.ButtonIcon();
        lblMsg = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSaldo = new org.edisoncor.gui.textField.TextFieldRound();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtFechaUlt = new com.toedter.calendar.JDateChooser();
        txtFechaAjuste = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMov = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);
        setPreferredSize(new java.awt.Dimension(424, 689));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.FlowLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ajustes de Licencia", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ebrima", 1, 18))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel2.setText("Cod.Funcionario");

        txtCodFunc.setBackground(new java.awt.Color(102, 153, 255));
        txtCodFunc.setForeground(new java.awt.Color(255, 255, 255));
        txtCodFunc.setCaretColor(new java.awt.Color(255, 255, 255));
        txtCodFunc.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtCodFunc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodFuncKeyTyped(evt);
            }
        });

        lblNombres.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombres.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnBuscar.setBackground(new java.awt.Color(102, 153, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btnBuscar.setText("buttonIcon1");
        btnBuscar.setToolTipText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioAnterior);
        radioAnterior.setText("Años anteriores");
        radioAnterior.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                radioAnteriorFocusGained(evt);
            }
        });

        buttonGroup1.add(radioActual);
        radioActual.setText("Año actual");
        radioActual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                radioActualFocusGained(evt);
            }
        });

        buttonGroup1.add(radioSiguiente);
        radioSiguiente.setText("Adelantada");
        radioSiguiente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                radioSiguienteFocusGained(evt);
            }
        });

        comboAño.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboAñoItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel3.setText("Año Licencia Generada");

        txtDias.setBackground(new java.awt.Color(102, 153, 255));
        txtDias.setForeground(new java.awt.Color(255, 255, 255));
        txtDias.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDias.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtDias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDiasKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel4.setText("Días a devolver");

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ok.png"))); // NOI18N
        btnAceptar.setText("buttonIcon1");
        btnAceptar.setToolTipText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        lblMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel5.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel5.setText("Saldo");

        txtSaldo.setBackground(new java.awt.Color(102, 153, 255));
        txtSaldo.setForeground(new java.awt.Color(255, 255, 255));
        txtSaldo.setCaretColor(new java.awt.Color(255, 255, 255));
        txtSaldo.setSelectionColor(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel6.setText("Fecha Ajuste");

        jLabel7.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel7.setText("Fecha Fin Ult Mov");

        txtFechaUlt.setDateFormatString("dd/MM/yyyy");
        txtFechaUlt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaUltKeyTyped(evt);
            }
        });

        txtFechaAjuste.setDateFormatString("dd/MM/yyyy");
        txtFechaAjuste.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaAjusteKeyTyped(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 153, 255));
        jButton1.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jButton1.setText("Calcular Días");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablaMov.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "FechaIni", "FechaFin", "Días Tomados"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaMov);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addComponent(txtCodFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(lblNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(radioAnterior)
                        .addGap(28, 28, 28)
                        .addComponent(radioActual)
                        .addGap(48, 48, 48)
                        .addComponent(radioSiguiente))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7)
                        .addGap(48, 48, 48)
                        .addComponent(txtFechaUlt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(68, 68, 68)
                                .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(12, 12, 12)
                                .addComponent(comboAño, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(146, 146, 146)
                                .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(txtFechaAjuste, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(jButton1)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(txtCodFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(lblNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioAnterior)
                    .addComponent(radioActual)
                    .addComponent(radioSiguiente))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(comboAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5))
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel7))
                    .addComponent(txtFechaUlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel6))
                    .addComponent(txtFechaAjuste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jButton1)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4))
                    .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodFuncKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodFuncKeyTyped
        this.limpiar();
        this.lblMsg.setText("");
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)) {
            evt.consume();
        }
        if(evt.getKeyChar()==10){
            this.btnBuscar.doClick();
            //this.txtFechaIni.requestFocus();
        }
        else{
        this.btnAceptar.setEnabled(false);
        this.comboAño.setEnabled(false);
        this.txtDias.setEnabled(false);
        this.txtSaldo.setEnabled(false);
        this.radioActual.setSelected(true);
        this.radioAnterior.setSelected(false);
        this.radioSiguiente.setSelected(false);
        this.txtFechaAjuste.setDate(null);
        this.txtFechaUlt.setDate(null);
        this.txtFechaUlt.setEnabled(false);
        this.LimpiarTabla();
        this.txtCodFunc.requestFocus();
        this.radioActual.setEnabled(false);
        this.radioAnterior.setEnabled(false);
        this.radioSiguiente.setEnabled(false);
        }
    }//GEN-LAST:event_txtCodFuncKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.limpiar();
        String codFunc=this.txtCodFunc.getText();
        if(!codFunc.equals("")){
            try {
                this.f=log.funcParcial(codFunc);
                if(f!=null){
                    this.lblMsg.setText("");
                    this.lblNombres.setText(f.getNomCompletoApe());
                    if(this.fechaAjuste!=null){
                        this.txtFechaAjuste.setDate(fechaAjuste);
                    }
                    
                    this.txtDias.setEnabled(true);
                    this.radioActual.setEnabled(true);
                    this.radioAnterior.setEnabled(true);
                    this.radioSiguiente.setEnabled(true);
                    this.radioActual.setSelected(true);
                    this.radioAnterior.setSelected(false);
                    this.radioSiguiente.setSelected(false);
                    this.txtFechaAjuste.setEnabled(true);
                    this.jButton1.setEnabled(true);
                    this.radioActual.requestFocus();
                }
                else{
                    this.lblMsg.setText("No existe el Funcionario");
                    this.comboAño.setEnabled(false);
                    this.btnAceptar.setEnabled(false);
                    this.comboAño.setEnabled(false);
                    this.radioActual.setEnabled(false);
                    this.radioAnterior.setEnabled(false);
                    this.radioSiguiente.setEnabled(false);
                    this.txtDias.setEnabled(false);
                    this.txtSaldo.setEnabled(false);
                }
            } catch (BDExcepcion ex) {
               JOptionPane.showMessageDialog(null, "Ha ocurrido un problema. Reinicie el programa y si persiste consulte a Desarrollo.");
            }
        }
        else{
            this.lblMsg.setText("Ingrese un número de funcionario");
        }
       
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void radioAnteriorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radioAnteriorFocusGained
       try {
           this.mov=null;
           this.comboAño.removeAllItems();
           this.txtDias.setText("");
           this.txtSaldo.setText("");
           this.txtDias.requestFocus();
           //this.txtFechaAjuste.setDate(null);
           this.txtFechaUlt.setDate(null);
           lista=this.log.licenciaAnteriorFunc(f.getCodFunc());
           if(lista.size()>0){
               for(int i=0;i<lista.size();i++){
                   this.comboAño.addItem(lista.get(i));
               }
               if(this.comboAño.getSelectedItem()!=null){
                   Licencia l=(Licencia) this.comboAño.getSelectedItem();
                   listaMov=this.log.ultimoMovimiento(this.txtCodFunc.getText(),10,l.getAño());
                   this.cargarTabla(listaMov);
                   this.txtSaldo.setText(l.getSaldo().toString());
                   this.lblMsg.setText("");
               }
               this.comboAño.setEnabled(true);
               this.txtDias.setEnabled(true);
               this.txtSaldo.setEnabled(true);
               this.btnAceptar.setEnabled(true);
           }
           else{
               this.comboAño.setEnabled(false);
               this.txtDias.setEnabled(false);
               this.txtSaldo.setEnabled(false);
               this.btnAceptar.setEnabled(false);
               this.lblMsg.setText("Este funcionario no tiene saldos de licencias previas");
               this.LimpiarTabla();
           }
       } catch (BDExcepcion ex) {
           JOptionPane.showMessageDialog(null, "Ha ocurrido un problema. Reinicie el programa y si persiste consulte a Desarrollo.");
       }
    }//GEN-LAST:event_radioAnteriorFocusGained

    private void radioActualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radioActualFocusGained
       try {
           this.mov=null;
           this.comboAño.removeAllItems();
           this.txtDias.setText("");
           this.txtSaldo.setText("");
           this.txtDias.requestFocus();
           // this.txtFechaAjuste.setDate(null);
           this.txtFechaUlt.setDate(null);
           l=this.log.licenciaActualFunc(f.getCodFunc());
           this.comboAño.addItem(l);
           listaMov=this.log.ultimoMovimiento(this.txtCodFunc.getText(),10,l.getAño());
           this.cargarTabla(listaMov);
           this.txtSaldo.setText(l.getSaldo().toString());
           this.lblMsg.setText("");
           
           this.comboAño.setEnabled(true);
           this.txtDias.setEnabled(true);
           this.txtSaldo.setEnabled(true);
           this.btnAceptar.setEnabled(true);
       } catch (BDExcepcion ex) {
           JOptionPane.showMessageDialog(null, "Ha ocurrido un problema. Reinicie el programa y si persiste consulte a Desarrollo.");
       }

    }//GEN-LAST:event_radioActualFocusGained

    private void radioSiguienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radioSiguienteFocusGained
       try {
           this.comboAño.removeAllItems();
           this.txtDias.setText("");
           this.txtSaldo.setText("");
           this.txtDias.requestFocus();
           // this.txtFechaAjuste.setDate(null);
           this.txtFechaUlt.setDate(null);
           this.mov=null;
           this.mov=new MovimientoLicencia();
           lic= log.consultaAdelantado(this.txtCodFunc.getText());
           if(lic.getFuncionario()!=null){
               l=new Licencia();
               l.setFuncionario(lic.getFuncionario());
               l.setAño(lic.getAñoSaldo()-1);
               this.lblMsg.setText("");
           }
           else{
               this.comboAño.setEnabled(false);
               this.txtDias.setEnabled(false);
               this.txtSaldo.setEnabled(false);
               this.btnAceptar.setEnabled(false);
               this.lblMsg.setText("Ingrese las fechas para la licencia de este Funcionario");
           }
           if(lic.getFuncionario()!=null){
               try {
                   this.lblNombres.setText(lic.getFuncionario().getNomCompletoApe());
                   Integer saldo=10-lic.getDiasTomados();
                   l.setSaldo(saldo);
                   this.comboAño.addItem(l);
                   this.txtSaldo.setText(saldo.toString());
                   mov.setAñoSaldo(lic.getAñoSaldo()-1);
                   
                   listaAdel=this.log.listarLicAdelantada(this.txtCodFunc.getText(), mov);
                   //this.listaMov=this.convierteMovEnAdel(listaAdel);
                   this.cargarTabla(listaAdel);
                   
                   this.comboAño.setEnabled(true);
                   this.txtDias.setEnabled(true);
                   this.txtSaldo.setEnabled(true);
                   this.btnAceptar.setEnabled(true);
               } catch (BDExcepcion ex) {
                   JOptionPane.showMessageDialog(null, "Ha ocurrido un problema. Reinicie el programa y si persiste consulte a Desarrollo.");
               }
               

    }//GEN-LAST:event_radioSiguienteFocusGained
    
        }catch (BDExcepcion ex) {
          JOptionPane.showMessageDialog(null, "Ha ocurrido un problema. Reinicie el programa y si persiste consulte a Desarrollo.");
       }
    }
        
    
    private void cargarTabla(ArrayList<MovimientoLicencia> listaMov) {
        this.LimpiarTabla();
       DefaultTableModel modelo = (DefaultTableModel)tablaMov.getModel();
        
        Object[] filas=new Object[modelo.getColumnCount()];
        
        if(listaMov!=null){     
        if(listaMov.size()>0){
                                                          
                    for(MovimientoLicencia f:listaMov){                       
                            if(f.getReferencia()==0){
                            filas[0]=f.getCodigo();
                            filas[1]=this.convertirFecha(f.getFechaIni());
                            filas[2]=this.convertirFecha(f.getFechaFin());
                            filas[3]=f.getDiasTomados();
                            modelo.addRow(filas);
                            }
                      }
             JTableHeader th; 
             th = tablaMov.getTableHeader(); 
             Font fuente = new Font("Ebrima", Font.BOLD, 14); 
             th.setBackground(Color.LIGHT_GRAY);
             th.setFont(fuente); 
             //this.jPanel1.setVisible(true);
                }
        }
    }
    
    private String convertirFecha(Date fecha){
   String str=null;
        if(fecha!=null){
         SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy"); 
         str= sdf.format(fecha);
        }
        return str;
    }   
    private void txtDiasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiasKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDiasKeyTyped

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        String dias=this.txtDias.getText();
        Integer saldo=Integer.valueOf(this.txtSaldo.getText());
        Integer day=Integer.valueOf(dias);
        try {
            if(day<saldo){
                if(mov!=null){
                    if(mov.getReferencia()!=null){
                        if(this.comboAño.getSelectedItem()!=null){
                            if(!dias.equals("")&&this.radioActual.isSelected()&&this.txtFechaAjuste.getDate()!=null){

                                l=(Licencia) this.comboAño.getSelectedItem();
                                mov.setFechaIni(this.txtFechaAjuste.getDate());
                                if(this.log.actualizarLicenciaActual(dias,l,mov)){
                                    this.radioActual.setSelected(true);
                                    this.txtCodFunc.setText("");
                                    this.txtDias.setText("");
                                    this.txtSaldo.setText("");
                                    this.txtFechaAjuste.setEnabled(false);
                                    this.LimpiarTabla();
                                    this.txtFechaUlt.setDate(null);
                                    this.txtFechaAjuste.setDate(null);
                                    this.jButton1.setEnabled(false);
                                    this.comboAño.removeAllItems();
                                    this.lblMsg.setText("Ajuste correctamente hecho");
                                    this.radioActual.setEnabled(false);
                                    this.radioAnterior.setEnabled(false);
                                    this.radioSiguiente.setEnabled(false);
                                    this.lblNombres.setText("");
                                    this.txtDias.setEnabled(false);
                                    this.txtCodFunc.requestFocus();
                                    if(this.marca!=null){
                                        marca.setSupervisado(1);
                                        this.trip.actualizaMarca(marca,null);
                                        internalMarcas=InternalMarcas.instancia();
                                        internalMarcas.getBtnListar().doClick();
                                    }
                                }
                            }else if(!dias.equals("")&&this.radioAnterior.isSelected()&&this.txtFechaAjuste.getDate()!=null){
                                l=(Licencia) this.comboAño.getSelectedItem();
                                mov.setFechaIni(this.txtFechaAjuste.getDate());
                                if(this.log.actualizarLicenciaActual(dias,l,mov)){
                                    this.radioAnterior.setSelected(true);
                                    this.txtCodFunc.setText("");
                                    this.txtDias.setText("");
                                    this.txtSaldo.setText("");
                                    this.txtFechaAjuste.setEnabled(false);
                                    this.LimpiarTabla();
                                    this.txtFechaUlt.setDate(null);
                                    this.txtFechaAjuste.setDate(null);
                                    this.jButton1.setEnabled(false);
                                    this.comboAño.removeAllItems();
                                    this.lblMsg.setText("Ajuste correctamente hecho");
                                    this.radioActual.setEnabled(false);
                                    this.radioAnterior.setEnabled(false);
                                    this.radioSiguiente.setEnabled(false);
                                    this.lblNombres.setText("");
                                    this.txtDias.setEnabled(false);
                                    this.txtCodFunc.requestFocus();
                                }
                            }
                            else if(!dias.equals("")&&this.radioSiguiente.isSelected()){
                                l=(Licencia) this.comboAño.getSelectedItem();
                                Integer d=Integer.valueOf(dias);
                                Integer dnegativo=d*-1;
                                if(d+l.getSaldo()<=10){
                                    mov.setFechaIni(this.txtFechaAjuste.getDate());
                                    if(this.log.insertarLicAdelantada(l.getAño()+1,mov.getFechaIni(),mov.getFechaFin(),dnegativo,l.getFuncionario(),mov.getReferencia(),null)){
                                        this.radioSiguiente.setSelected(true);
                                        this.txtCodFunc.setText("");
                                        this.txtDias.setText("");
                                        this.txtSaldo.setText("");
                                        this.txtFechaAjuste.setEnabled(false);
                                        this.LimpiarTabla();
                                        this.txtFechaUlt.setDate(null);
                                        this.txtFechaAjuste.setDate(null);
                                        this.jButton1.setEnabled(false);
                                        this.comboAño.removeAllItems();
                                        this.lblMsg.setText("Ajuste correctamente hecho");
                                        this.radioActual.setEnabled(false);
                                        this.radioAnterior.setEnabled(false);
                                        this.radioSiguiente.setEnabled(false);
                                        this.lblNombres.setText("");
                                        this.txtDias.setEnabled(false);
                                        this.txtCodFunc.requestFocus();
                                    }
                                }
                                else{
                                    this.lblMsg.setText("Los días a devolver mas el saldo son mayor a 10");
                                }
                            }
                            else{
                                this.lblMsg.setText("Ingrese los días a devolver");
                            }
                        }
                        else{
                            this.lblMsg.setText("Este funcionario no tiene licencia para modificar");
                        }
                    }
                    else{
                        this.lblMsg.setText("No ha seleccionado ningún movimiento");
                    }

                }
                else{
                    this.lblMsg.setText("No ha seleccionado ningún movimiento");
                }
            }
            else{
                this.lblMsg.setText("Los días a devolver superan el saldo");
            }
        } catch (ClassNotFoundException ex) { 
           Logger.getLogger(InternalAjustesLicencia.class.getName()).log(Level.SEVERE, null, ex);
       } catch (SQLException ex) {
           Logger.getLogger(InternalAjustesLicencia.class.getName()).log(Level.SEVERE, null, ex);
       } 
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtFechaUltKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaUltKeyTyped
        if(evt.getKeyChar()==10){
            this.txtFechaAjuste.requestFocus();
        }
    }//GEN-LAST:event_txtFechaUltKeyTyped

    private void txtFechaAjusteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaAjusteKeyTyped
        if(evt.getKeyChar()==10){
            this.btnAceptar.doClick();
        }
    }//GEN-LAST:event_txtFechaAjusteKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(this.txtFechaUlt.getDate()!=null&&this.txtFechaAjuste.getDate()!=null){
            Date ini=this.txtFechaUlt.getDate();
            Date fin=this.txtFechaAjuste.getDate();
            this.txtDias.setText(this.evaluaFechas(fin, ini, f.getHorarios()).toString());
        }
        else{
            this.lblMsg.setText("Verifique que las fechas estén ingresadas");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboAñoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboAñoItemStateChanged
        this.txtDias.requestFocus();
        if(this.radioAnterior.isSelected()){
            if(this.comboAño.getSelectedItem()!=null){
                l=(Licencia) this.comboAño.getSelectedItem();
                if(l!=null){
                    try {
                        listaMov=this.log.ultimoMovimiento(this.txtCodFunc.getText(),10,l.getAño());
                        this.cargarTabla(listaMov);
                        this.txtSaldo.setText(l.getSaldo().toString());
                        this.lblMsg.setText("");
                    } catch (BDExcepcion ex) {
                       JOptionPane.showMessageDialog(null, "Ha ocurrido un problema. Reinicie el programa y si persiste consulte a Desarrollo.");
                    }

                }

            }
        }
    }//GEN-LAST:event_comboAñoItemStateChanged

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        instancia=null;
    }//GEN-LAST:event_formInternalFrameClosed

    
    private void limpiar(){
        f=null;
        this.lblNombres.setText("");
        this.comboAño.removeAllItems();
        this.txtSaldo.setText("");
        this.txtDias.setText("");
        this.txtFechaAjuste.setDate(null);
    }
    
     private void LimpiarTabla() {
        DefaultTableModel modelo=(DefaultTableModel) tablaMov.getModel();
        //primero limpio todas las filas
        for (int i = 0; i < tablaMov.getRowCount(); i++) {
            modelo.removeRow(i);
            i-=1;
        }
    }
     private void cargarMovimiento(java.awt.event.MouseEvent e){
     this.mov=null;
     this.mov=new MovimientoLicencia();
     Integer m=this.tablaMov.rowAtPoint(e.getPoint());
     String codigo=String.valueOf(tm.getValueAt(m,0));
     String fechaFin=String.valueOf(tm.getValueAt(m,2));
     this.mov.setReferencia(Integer.valueOf(codigo));
     this.mov.setFechaFin(this.fechaStringaDate(fechaFin));
     this.txtFechaUlt.setDate(mov.getFechaFin());
    }
     
     private Date fechaStringaDate(String str){
    SimpleDateFormat formatoDelTexto = new SimpleDateFormat("dd/MM/yyyy");
    Date fecha = null;
        try {

        fecha = formatoDelTexto.parse(str);

        } catch (ParseException ex) {

        ex.printStackTrace();

        }

        return fecha;
    }
     private Integer evaluaFechas(Date fechaIni, Date fechaFin,ArrayList<Horario>horarios) {
        int dias=(int) ((fechaFin.getTime()-fechaIni.getTime())/86400000);
        dias+=1;
 	Integer domingos=this.obtieneDomingoySabado(fechaIni, fechaFin,horarios);
        Integer feriados=this.compararFechas(fechaIni, fechaFin).size();
        real=dias-domingos-feriados;
             
        return real;
    }
      private ArrayList<Feriado> compararFechas(Date fechaIni, Date fechaFin) {
        Integer dias=0;
        ArrayList<Feriado> aux=new ArrayList<>();
        
        for(Feriado f:this.listaFeriados){
            if((fechaIni.equals(f.getFecha())||fechaIni.before(f.getFecha()))&& (fechaFin.equals(f.getFecha())||fechaFin.after(f.getFecha()))){
                aux.add(f);
            }
        }
        
        return aux;
    }

     
     private Integer obtieneDomingoySabado(Date fechaIni, Date fechaFin,ArrayList<Horario>horarios){
    Integer contador=0;
    Calendar c1 = Calendar.getInstance();
    c1.setTime(fechaIni);
    Calendar c2 = Calendar.getInstance();
    c2.setTime(fechaFin);
    ArrayList<Date> listaFechas = new ArrayList<Date>();
    boolean Domingo=this.diaEsta(horarios,"DOMINGO");
//    boolean Sabado=this.diaEsta(horarios,"SABADO");
    
    while (!c1.after(c2)) {
        listaFechas.add(c1.getTime());
        c1.add(Calendar.DAY_OF_MONTH, 1);
    }
    
    for (Iterator<Date> it = listaFechas.iterator(); it.hasNext();) {
          Date date = it.next();
          GregorianCalendar cal = new GregorianCalendar();
          cal.setTime(date);
          
          if(!Domingo){
            if(cal.get(Calendar.DAY_OF_WEEK)==1){
                  contador++;
            }	
          }
//          if(!Sabado){
//            if(cal.get(Calendar.DAY_OF_WEEK)==7){
//                  contador++;
//          }
//       }
       
    }
     return contador;
  }
     
      private boolean diaEsta(ArrayList<Horario> horarios, String dia) {
        boolean esta=false;
        int i=0;
        while(i<horarios.size()&&!esta){
            if(horarios.get(i).getDescripcion().equals(dia)){
                esta=true;
            }
            i++;
        }
        return esta;
    }    
      
      private ArrayList<MovimientoLicencia> convierteMovEnAdel(ArrayList<LicenciaAdelantada> listaAdel) {
        this.listaMov=null;
        if(listaAdel!=null){
            this.listaMov=new ArrayList<>();
            for(LicenciaAdelantada a:listaAdel){
                MovimientoLicencia m=new MovimientoLicencia();
                m.setFechaFin(a.getFechaFin());
                m.setFechaIni(a.getFechaIni());
                m.setCodigo(a.getCodigo());
                m.setDiasTomados(a.getDiasPedidos());
                m.setReferencia(a.getReferencia());
                this.listaMov.add(m);
            }
        }
        return listaMov;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIcon btnAceptar;
    private org.edisoncor.gui.button.ButtonIcon btnBuscar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox comboAño;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JRadioButton radioActual;
    private javax.swing.JRadioButton radioAnterior;
    private javax.swing.JRadioButton radioSiguiente;
    private javax.swing.JTable tablaMov;
    private org.edisoncor.gui.textField.TextFieldRound txtCodFunc;
    private org.edisoncor.gui.textField.TextFieldRound txtDias;
    private com.toedter.calendar.JDateChooser txtFechaAjuste;
    private com.toedter.calendar.JDateChooser txtFechaUlt;
    private org.edisoncor.gui.textField.TextFieldRound txtSaldo;
    // End of variables declaration//GEN-END:variables
}
