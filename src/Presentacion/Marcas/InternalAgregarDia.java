
package Presentacion.Marcas;

import Dominio.Funcionario;
import Dominio.Marca;
import Logica.LogTripaliare;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;

public class InternalAgregarDia extends javax.swing.JInternalFrame {
private Marca m=new Marca();
private Funcionario f;
public Date date;
private LogTripaliare log;
private static InternalAgregarDia instancia=null;
    public InternalAgregarDia(LogTripaliare lo,Funcionario fu) {
        initComponents();
        date=new Date();
        this.log=lo;
        this.f=fu;
        this.lblNombre.setText(f.getNomCompletoYNum());
    }

     public static InternalAgregarDia instancia(LogTripaliare lo,Funcionario fu) throws ClassNotFoundException, SQLException
   {    
         if (instancia== null)
         {
            instancia = new InternalAgregarDia(lo,fu);
         }
         return instancia;
      
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFecha = new com.toedter.calendar.JDateChooser();
        txtHora = new org.edisoncor.gui.textField.TextFieldRound();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        btnAceptar = new org.edisoncor.gui.button.ButtonIcon();
        lblMsj = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Agregar Marca");
        setPreferredSize(new java.awt.Dimension(396, 320));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        txtFecha.setDateFormatString("dd/MM/yyyy");
        txtFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaKeyTyped(evt);
            }
        });

        txtHora.setBackground(new java.awt.Color(102, 153, 255));
        txtHora.setForeground(new java.awt.Color(255, 255, 255));
        txtHora.setCaretColor(new java.awt.Color(255, 255, 255));
        txtHora.setSelectionColor(new java.awt.Color(102, 102, 102));
        txtHora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHoraKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel6.setText("Hora Marca");

        jLabel7.setFont(new java.awt.Font("Euphemia", 1, 14)); // NOI18N
        jLabel7.setText("Fecha Marca");

        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ok.png"))); // NOI18N
        btnAceptar.setText("buttonIcon1");
        btnAceptar.setToolTipText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblMsj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57)
                                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblMsj, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyPressed
        if(evt.getKeyChar()==27){
            this.dispose();
        }
    }//GEN-LAST:event_txtFechaKeyPressed

    private void txtFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyTyped
        if(evt.getKeyChar()==27){
            this.dispose();
        }
    }//GEN-LAST:event_txtFechaKeyTyped

    private void txtHoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraKeyTyped
        if(evt.getKeyChar()==27){
            this.dispose();
        }
        this.lblMsj.setText("");
    }//GEN-LAST:event_txtHoraKeyTyped

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        m.setFecha(date); 
        m.setFechaUso(this.txtFecha.getDate());
        m.setHoraUso(this.txtHora.getText());
        m.setFunCod(f.getCodFunc());
        if(this.verificaFormatoHora(m.getHoraUso())){
            if(this.esDomingo(m.getFechaUso())){
                try {
                    m.setSupervisado(1);
                    m.setMarcaFecha(this.fijaHora(m.getFechaUso(), m.getHoraUso()));
                    m.setTipo("MANUAL");
                    if(this.log.generarMarcaManual(m)){
                        InternalMarcas.instancia().getBtnListar().doClick();
                        this.dispose();
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InternalAgregarDia.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(InternalAgregarDia.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
               this.lblMsj.setText("La fecha debe corresponder a un día domingo"); 
            }
        }
        else{
            this.lblMsj.setText("El formato de la hora debe ser HH:MM:SS");
            this.txtHora.requestFocus();
            this.txtHora.selectAll();
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        instancia=null;
    }//GEN-LAST:event_formInternalFrameClosed

      
    private Timestamp fijaHora(Date dat, String hora){
    Calendar c=Calendar.getInstance();
    c.setTimeInMillis(dat.getTime());
    c.set(Calendar.HOUR_OF_DAY, Integer.valueOf(this.armaHora(hora,0,1)));
    c.set(Calendar.MINUTE, Integer.valueOf(this.armaHora(hora,3,4)));
    c.set(Calendar.SECOND, Integer.valueOf(this.armaHora(hora,6,7)));
    c.set(Calendar.MILLISECOND, 0);
    Timestamp ts = new java.sql.Timestamp(dat.getTime());
    ts.setTime(c.getTimeInMillis());
    
    return ts;
    }
    
    private boolean esDomingo(Date dat){
      GregorianCalendar cal = new GregorianCalendar();
      cal.setTime(dat);
      boolean es=false;
      if(cal.get(Calendar.DAY_OF_WEEK)==1){
          es=true;
      }
      return es;
    }
            
    
     private String armaHora(String hora, Integer pos1,Integer pos2){
        String retorno=String.valueOf(hora.charAt(pos1));
        retorno+=String.valueOf(hora.charAt(pos2));
        return retorno;
    }
     
     private boolean verificaFormatoHora(String hora){
         boolean vale=true;
         if(hora.length()==8){
             if(!Character.isDigit(hora.charAt(0))||!Character.isDigit(hora.charAt(1))||hora.charAt(2)!=':'||!Character.isDigit(hora.charAt(3))||!Character.isDigit(hora.charAt(4))
                     ||hora.charAt(5)!=':'||!Character.isDigit(hora.charAt(6))||!Character.isDigit(hora.charAt(7))){
                 vale=false;
             }
         }
         else{
             vale=false;
         }
         return vale;
     }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIcon btnAceptar;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblMsj;
    private javax.swing.JLabel lblNombre;
    private com.toedter.calendar.JDateChooser txtFecha;
    private org.edisoncor.gui.textField.TextFieldRound txtHora;
    // End of variables declaration//GEN-END:variables
}
